version: '3.5'
volumes:
  static:
    name: billing_static

services:
  psql:
    build:
      context: ./deploy/psql
      dockerfile: Dockerfile
    image: postgres_billing:1.0
    container_name: ${BILLING_POSTGRES_HOST}
    environment:
      POSTGRES_DB: "${BILLING_POSTGRES_DB}"
      POSTGRES_USER: "${BILLING_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${BILLING_POSTGRES_PASSWORD}"

  admin-billing:
    build:
      context: ./admin-billing
      dockerfile: Dockerfile
    image: admin-billing:1.0
    container_name: ${ADMIN_BILLING_HOST}
    env_file:
      - .env
    volumes:
      - static:/app/static
    entrypoint: >
      sh -c "python manage.py createcachetable &&
             python manage.py collectstatic  --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:${ADMIN_BILLING_PORT}"
    expose:
      - ${ADMIN_BILLING_PORT}
    depends_on:
      - psql

  billing-api:
    build: ./billing-api
    image: billing_api:1.0
    container_name: ${BILLING_API_HOST}
    entrypoint: >
      sh -c "uvicorn main_api:app --host 0.0.0.0 --port $BILLING_API_PORT"
    env_file:
      - ./.env
    depends_on:
      - psql

  rabbitmq:
    image: rabbitmq:latest
    container_name: ${BILLING_RABBITMQ_HOST}
    env_file:
      - ./.env

  worker:
    image: billing_api:1.0
    container_name: ${BILLING_WORKER_HOST}
    env_file:
      - .env
    entrypoint: >
      sh -c "celery -A app_celery worker -B --loglevel=info"
    expose:
      - ${BILLING_WORKER_PORT}
    depends_on:
      - rabbitmq
      - psql
      - billing-api

  nginx:
    image: nginx:latest
    container_name: nginx-billing
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/site.conf:/etc/nginx/conf.d/site.conf:ro
      - /tmp/logs/nginx/:/var/log/nginx/
      - static:/app/static
    ports:
      - "82:80"
      - "8002:80"
    depends_on:
      - admin-billing

networks:
  default:
    name: movies_networks
    external: true


