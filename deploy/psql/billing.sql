CREATE SCHEMA "billing";

CREATE SCHEMA "marketing";

CREATE TYPE "billing"."subscription_status" AS ENUM (
  'created',
  'subscribe',
  'expired',
  'blocked'
);

CREATE TYPE "billing"."payment_status" AS ENUM (
  'billed',
  'paid',
  'billed_timeout',
  'refund',
  'refunded'
);

CREATE TABLE "billing"."customer" (
  "id" uuid PRIMARY KEY,
  "user_id" uuid,
  "email" varchar
);

CREATE TABLE "billing"."privileged_role" (
  "id" uuid PRIMARY KEY,
  "customer" uuid,
  "status" billing.subscription_status,
  "role_payment" varchar,
  "end_payment" timestamp
);

CREATE TABLE "billing"."payment" (
  "id" uuid PRIMARY KEY,
  "customer" uuid,
  "status" billing.payment_status,
  "role_payment" varchar,
  "amount_months" int,
  "payed_at" timestamp,
  "personal_discount" int,
  "months_discount" int,
  "promocode" text,
  "tariff" float,
  "amount" float,
  "currency" varchar,
  "id_payment" text,
  "id_checkout" text,
  "id_refund" text,
  "card" text
);

CREATE TABLE "marketing"."personal_discount" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_user" uuid,
  "discount" int
);

CREATE TABLE "marketing"."months_discount" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "amount_months" int,
  "discount" int
);

CREATE TABLE "marketing"."promocode" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "code" varchar,
  "description" text,
  "role" varchar,
  "discount" int,
  "amount_months" int,
  "expiration" timestamp
);

CREATE TABLE "marketing"."tariff" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "role" varchar,
  "description" text,
  "price" float
);

ALTER TABLE "billing"."privileged_role" ADD FOREIGN KEY ("customer_id") REFERENCES "billing"."customer" ("id");

ALTER TABLE "billing"."payment" ADD FOREIGN KEY ("customer_id") REFERENCES "billing"."customer" ("id");
